openapi: 3.0.0

info:
  version: "1.0.0"
  title: its-rest-api

servers: 
  - url: https://its.com

security:
  - ApiKey: []
  
paths:
  /products:
    get:
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
  
  /products/{id_product}:
    get:
      parameters:
      - in: path
        name: id_product
        required: true
        schema:
            type: integer
            example: 42
        
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
                
  /products/{id_product}/parts:
    get:
      parameters:
      - in: path
        name: id_product
        required: true
        schema:
            type: integer
            example: 42
        
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPartList'
                
  /products/{id_product}/parts/{id_part}:
    get:
      parameters:
      - in: path
        name: id_product
        required: true
        schema:
            type: integer
            example: 42
            
      - in: path
        name: id_part
        required: true
        schema:
            type: integer
            example: 1
        
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPartList'
                
  /users:
    get:
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
                
  /users/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
              type: integer
              example: 100
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                
components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          example: 'Product'
        descr:
          type: string
          example: 'This is the product.'
          
    ProductList:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 42
        - $ref: '#/components/schemas/Product'
          
    ProductPart:
      type: object
      properties:
        name:
          type: string
          example: 'Product Part'
        descr:
          type: string
          example: 'This is the part of the product.'
        
    ProductPartList:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
        - $ref: '#/components/schemas/ProductPart'
        
    UserType:
      type: string
      enum: ['customer', 'employee', 'manager', 'executive', 'admin']    
    
    User:
      type: object
      properties:
        name:
          type: string
          example: 'John Cena'
        mail:
          type: string
          example: 'john@gmail.com'
        login:
          type: string
          example: 'john420'
        password:
          type: string
          format: bytes
          example: "12345"
        type:
          $ref: '#/components/schemas/UserType'
          
    UserList:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 10
          name:
            type: string
            example: 'John Cena'
          
